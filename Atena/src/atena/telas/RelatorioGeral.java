/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atena.telas;

import atena.gabarito.Gabarito;
import atena.gabarito.GabaritoDAO;
import atena.processoseletivo.ProcessoSeletivo;
import atena.processoseletivo.ProcessoSeletivoDAO;
import atena.processoseletivo.ProcessoSeletivoTableModel;
import atena.respostas.RelatorioRespostasTableModel;
import atena.respostas.Respostas;
import atena.respostas.RespostasDAO;
import atena.respostas.RespostasTableModel;
import atena.usuario.Usuario;
import atena.usuario.UsuarioDAO;
import atena.usuario.UsuarioTableModel;
import atena.util.Relatorios;
import atena.util.Util;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Karlos Oliveira
 */
public class RelatorioGeral extends javax.swing.JDialog {

    ProcessoSeletivo processoSeletivo = new ProcessoSeletivo();
    ProcessoSeletivoDAO processoSeletivoDAO = new ProcessoSeletivoDAO();
    Gabarito gabarito = new Gabarito();
    GabaritoDAO gabaritoDAO = new GabaritoDAO();
    Respostas respostas = new Respostas();
    RespostasDAO respostasDAO = new RespostasDAO();
    int pontos = 0;
    List<Respostas> ranking = new ArrayList<>();

    /**
     * Creates new form TelaCadastroUsuario
     */
    public RelatorioGeral(java.awt.Frame parent, boolean modal) {
        initComponents();
        setModal(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoTipoSaida = new javax.swing.ButtonGroup();
        btAdministracao = new javax.swing.JButton();
        btServicoSocial = new javax.swing.JButton();
        btContabeis = new javax.swing.JButton();
        btPdfGeral = new javax.swing.JButton();
        btAnalise = new javax.swing.JButton();
        btDireito = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        btEnfermagem = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jrPdf = new javax.swing.JRadioButton();
        jrTabela = new javax.swing.JRadioButton();
        btEducacaoFisica = new javax.swing.JButton();
        btFisioterapia = new javax.swing.JButton();
        btPsicologia = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(680, 420));
        setMinimumSize(new java.awt.Dimension(680, 420));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(680, 420));
        setResizable(false);
        getContentPane().setLayout(null);

        btAdministracao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btAdministracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atena/imagens/adm.png"))); // NOI18N
        btAdministracao.setText("ADMINISTRAÇÃO");
        btAdministracao.setContentAreaFilled(false);
        btAdministracao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btAdministracao.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btAdministracao.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btAdministracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdministracaoActionPerformed(evt);
            }
        });
        getContentPane().add(btAdministracao);
        btAdministracao.setBounds(20, 140, 200, 60);

        btServicoSocial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btServicoSocial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atena/imagens/servico_social.png"))); // NOI18N
        btServicoSocial.setText("SERVIÇO SOCIAL");
        btServicoSocial.setContentAreaFilled(false);
        btServicoSocial.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btServicoSocial.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btServicoSocial.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btServicoSocial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btServicoSocialActionPerformed(evt);
            }
        });
        getContentPane().add(btServicoSocial);
        btServicoSocial.setBounds(460, 260, 200, 60);

        btContabeis.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btContabeis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atena/imagens/contabeis.png"))); // NOI18N
        btContabeis.setText("CIÊNCIAS CONTÁBEIS");
        btContabeis.setContentAreaFilled(false);
        btContabeis.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btContabeis.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btContabeis.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btContabeis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btContabeisActionPerformed(evt);
            }
        });
        getContentPane().add(btContabeis);
        btContabeis.setBounds(20, 260, 223, 60);

        btPdfGeral.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btPdfGeral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atena/imagens/pdf.png"))); // NOI18N
        btPdfGeral.setText("Relatório Geral");
        btPdfGeral.setContentAreaFilled(false);
        btPdfGeral.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPdfGeral.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btPdfGeral.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btPdfGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPdfGeralActionPerformed(evt);
            }
        });
        getContentPane().add(btPdfGeral);
        btPdfGeral.setBounds(530, 340, 140, 70);

        btAnalise.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btAnalise.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atena/imagens/ads.png"))); // NOI18N
        btAnalise.setText("ANÁLISE DE SISTEMAS");
        btAnalise.setContentAreaFilled(false);
        btAnalise.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btAnalise.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btAnalise.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btAnalise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnaliseActionPerformed(evt);
            }
        });
        getContentPane().add(btAnalise);
        btAnalise.setBounds(20, 200, 233, 60);

        btDireito.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btDireito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atena/imagens/direito.png"))); // NOI18N
        btDireito.setText("DIREITO");
        btDireito.setContentAreaFilled(false);
        btDireito.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btDireito.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btDireito.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btDireito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDireitoActionPerformed(evt);
            }
        });
        getContentPane().add(btDireito);
        btDireito.setBounds(260, 140, 143, 60);

        btVoltar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atena/imagens/return.png"))); // NOI18N
        btVoltar.setText("Voltar");
        btVoltar.setContentAreaFilled(false);
        btVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btVoltar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btVoltar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(btVoltar);
        btVoltar.setBounds(0, 340, 90, 70);

        btEnfermagem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btEnfermagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atena/imagens/enfermagem.png"))); // NOI18N
        btEnfermagem.setText("ENFERMAGEM");
        btEnfermagem.setContentAreaFilled(false);
        btEnfermagem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btEnfermagem.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btEnfermagem.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btEnfermagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEnfermagemActionPerformed(evt);
            }
        });
        getContentPane().add(btEnfermagem);
        btEnfermagem.setBounds(260, 260, 180, 60);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        jLabel7.setText("Emitir relatório:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(20, 100, 150, 19);

        grupoTipoSaida.add(jrPdf);
        jrPdf.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jrPdf.setText("PDF");
        getContentPane().add(jrPdf);
        jrPdf.setBounds(160, 100, 60, 20);

        grupoTipoSaida.add(jrTabela);
        jrTabela.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jrTabela.setText("Tabela");
        getContentPane().add(jrTabela);
        jrTabela.setBounds(230, 100, 90, 23);

        btEducacaoFisica.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btEducacaoFisica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atena/imagens/educacao_fisica.png"))); // NOI18N
        btEducacaoFisica.setText("EDUCAÇÃO FÍSICA");
        btEducacaoFisica.setContentAreaFilled(false);
        btEducacaoFisica.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btEducacaoFisica.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btEducacaoFisica.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btEducacaoFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEducacaoFisicaActionPerformed(evt);
            }
        });
        getContentPane().add(btEducacaoFisica);
        btEducacaoFisica.setBounds(260, 200, 210, 60);

        btFisioterapia.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btFisioterapia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atena/imagens/fisioterapia.png"))); // NOI18N
        btFisioterapia.setText("FISIOTERAPIA");
        btFisioterapia.setContentAreaFilled(false);
        btFisioterapia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btFisioterapia.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btFisioterapia.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btFisioterapia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFisioterapiaActionPerformed(evt);
            }
        });
        getContentPane().add(btFisioterapia);
        btFisioterapia.setBounds(460, 140, 180, 60);

        btPsicologia.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btPsicologia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atena/imagens/pscicologia.png"))); // NOI18N
        btPsicologia.setText("PSICOLOGIA");
        btPsicologia.setContentAreaFilled(false);
        btPsicologia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPsicologia.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btPsicologia.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btPsicologia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPsicologiaActionPerformed(evt);
            }
        });
        getContentPane().add(btPsicologia);
        btPsicologia.setBounds(460, 200, 170, 60);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atena/imagens/tela_relatorio.png"))); // NOI18N
        jLabel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 102, 0), 1, true));
        jLabel6.setMaximumSize(new java.awt.Dimension(680, 420));
        jLabel6.setMinimumSize(new java.awt.Dimension(680, 420));
        jLabel6.setPreferredSize(new java.awt.Dimension(680, 420));
        getContentPane().add(jLabel6);
        jLabel6.setBounds(0, 0, 680, 420);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public List gerarRanking(String curso) {
        List<Respostas> listaRanking = new ArrayList<>();
        List<Respostas> listaRespostas;
        listaRespostas = (respostasDAO.listar());
        for (Respostas listaResposta : listaRespostas) {
            if (listaResposta.isQualificado()) {
                if (listaResposta.getCurso().getNomeCurso().equalsIgnoreCase(curso)) {
                    listaRanking.add(listaResposta);
                }
            }
        }
        Collections.sort(listaRanking);
        return listaRanking;
    }

    public List desempatarRedacao(String curso) {
        List<Respostas> listaRespostas1 = gerarRanking(curso);
        List<Respostas> listaRespostas2 = gerarRanking(curso);
        for (int i = 0; i < listaRespostas1.size() - 1; i++) {
            for (int j = i + 1; j < listaRespostas2.size(); j++) {
                if (listaRespostas1.get(i).getTotalPontos().equals(listaRespostas2.get(j).getTotalPontos())) {
                    if (listaRespostas1.get(i).getNotaRedacao() < listaRespostas2.get(j).getNotaRedacao()) {
                        Collections.swap(listaRespostas1, i, j);
                    }
                }
            }
        }
        return listaRespostas1;
    }

    public List desempatarDireito(String curso) {
        List<Respostas> listaRespostas1 = desempatarRedacao(curso);
        List<Respostas> listaRespostas2 = desempatarRedacao(curso);
        for (int i = 0; i < listaRespostas1.size() - 1; i++) {
            for (int j = i + 1; j < listaRespostas2.size(); j++) {
                if (listaRespostas1.get(i).getTotalPontos().equals(listaRespostas2.get(j).getTotalPontos())
                        && listaRespostas1.get(i).getNotaRedacao().equals(listaRespostas2.get(j).getNotaRedacao())) {
                    if (listaRespostas1.get(i).getPortugues() < listaRespostas2.get(j).getPortugues()) {
                        Collections.swap(listaRespostas1, i, j);
                    }
                }
            }
        }
        return listaRespostas1;
    }

    public List desempatarMatematica(String curso) {
        List<Respostas> listaRespostas1 = desempatarRedacao(curso);
        List<Respostas> listaRespostas2 = desempatarRedacao(curso);
        for (int i = 0; i < listaRespostas1.size() - 1; i++) {
            for (int j = i + 1; j < listaRespostas2.size(); j++) {
                if (listaRespostas1.get(i).getTotalPontos().equals(listaRespostas2.get(j).getTotalPontos())
                        && listaRespostas1.get(i).getNotaRedacao().equals(listaRespostas2.get(j).getNotaRedacao())) {
                    if (listaRespostas1.get(i).getMatematica() < listaRespostas2.get(j).getMatematica()) {
                        Collections.swap(listaRespostas1, i, j);
                    }
                }
            }
        }
        return listaRespostas1;
    }

    public List desempatarGeografiaHistoria(String curso) {
        List<Respostas> listaRespostas1 = desempatarRedacao(curso);
        List<Respostas> listaRespostas2 = desempatarRedacao(curso);
        for (int i = 0; i < listaRespostas1.size() - 1; i++) {
            for (int j = i + 1; j < listaRespostas2.size(); j++) {
                if (listaRespostas1.get(i).getTotalPontos().equals(listaRespostas2.get(j).getTotalPontos())
                        && listaRespostas1.get(i).getNotaRedacao().equals(listaRespostas2.get(j).getNotaRedacao())) {
                    if ((listaRespostas1.get(i).getGeografia() + listaRespostas1.get(i).getHistoria()) < (listaRespostas2.get(j).getGeografia() + listaRespostas2.get(j).getHistoria())) {
                        Collections.swap(listaRespostas1, i, j);
                    }
                }
            }
        }
        return listaRespostas1;
    }

    public List desempatarBiologia(String curso) {
        List<Respostas> listaRespostas1 = desempatarRedacao(curso);
        List<Respostas> listaRespostas2 = desempatarRedacao(curso);
        for (int i = 0; i < listaRespostas1.size() - 1; i++) {
            for (int j = i + 1; j < listaRespostas2.size(); j++) {
                if (listaRespostas1.get(i).getTotalPontos().equals(listaRespostas2.get(j).getTotalPontos())
                        && listaRespostas1.get(i).getNotaRedacao().equals(listaRespostas2.get(j).getNotaRedacao())) {
                    if (listaRespostas1.get(i).getBiologia() < listaRespostas2.get(j).getBiologia()) {
                        Collections.swap(listaRespostas1, i, j);
                    }
                }
            }
        }
        return listaRespostas1;
    }

    public List desempatarHistoria(String curso) {
        List<Respostas> listaRespostas1 = desempatarDireito(curso);
        List<Respostas> listaRespostas2 = desempatarDireito(curso);
        for (int i = 0; i < listaRespostas1.size() - 1; i++) {
            for (int j = i + 1; j < listaRespostas2.size(); j++) {
                if (listaRespostas1.get(i).getTotalPontos().equals(listaRespostas2.get(j).getTotalPontos())
                        && listaRespostas1.get(i).getNotaRedacao().equals(listaRespostas2.get(j).getNotaRedacao())) {
                    if (listaRespostas1.get(i).getHistoria() < listaRespostas2.get(j).getHistoria()) {
                        Collections.swap(listaRespostas1, i, j);
                    }
                }
            }
        }
        return listaRespostas1;
    }

    public List desempatarGeralAdmAdsContabeis(String curso) {
        List<Respostas> listaRespostas1 = desempatarMatematica(curso);
        List<Respostas> listaRespostas2 = desempatarMatematica(curso);
        for (int i = 0; i < listaRespostas1.size() - 1; i++) {
            for (int j = i + 1; j < listaRespostas2.size(); j++) {
                if (listaRespostas1.get(i).getTotalPontos().equals(listaRespostas2.get(j).getTotalPontos())
                        && listaRespostas1.get(i).getNotaRedacao().equals(listaRespostas2.get(j).getNotaRedacao())) {
                    if (listaRespostas1.get(i).getPortugues() < listaRespostas2.get(j).getPortugues()) {
                        Collections.swap(listaRespostas1, i, j);
                    }
                }
            }
        }
        return listaRespostas1;
    }

    public List desempatarGeralEdFisicaEnferFisio(String curso) {
        List<Respostas> listaRespostas1 = desempatarBiologia(curso);
        List<Respostas> listaRespostas2 = desempatarBiologia(curso);
        for (int i = 0; i < listaRespostas1.size() - 1; i++) {
            for (int j = i + 1; j < listaRespostas2.size(); j++) {
                if (listaRespostas1.get(i).getTotalPontos().equals(listaRespostas2.get(j).getTotalPontos())
                        && listaRespostas1.get(i).getNotaRedacao().equals(listaRespostas2.get(j).getNotaRedacao())) {
                    if (listaRespostas1.get(i).getPortugues() < listaRespostas2.get(j).getPortugues()) {
                        Collections.swap(listaRespostas1, i, j);
                    }
                }
            }
        }
        return listaRespostas1;
    }

    public List desempatarGeralPscicoSocial(String curso) {
        List<Respostas> listaRespostas1 = desempatarGeografiaHistoria(curso);
        List<Respostas> listaRespostas2 = desempatarGeografiaHistoria(curso);
        for (int i = 0; i < listaRespostas1.size() - 1; i++) {
            for (int j = i + 1; j < listaRespostas2.size(); j++) {
                if (listaRespostas1.get(i).getTotalPontos().equals(listaRespostas2.get(j).getTotalPontos())
                        && listaRespostas1.get(i).getNotaRedacao().equals(listaRespostas2.get(j).getNotaRedacao())) {
                    if (listaRespostas1.get(i).getPortugues() < listaRespostas2.get(j).getPortugues()) {
                        Collections.swap(listaRespostas1, i, j);
                    }
                }
            }
        }
        return listaRespostas1;
    }

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btVoltarActionPerformed

    private void limparSelecao() {
        if (jrPdf.isSelected()) {
            jrPdf.setSelected(false);
        } else if (jrTabela.isSelected()) {
            jrTabela.setSelected(false);
        }
    }

    private void pdfOuTabela(List<Respostas> resp) {
        respostas = respostasDAO.listar().get(0);
        if (jrPdf.isSelected()) {
            Relatorios.gerarRelatorio(resp, respostas);
        } else if (jrTabela.isSelected()) {
            RelatorioRespostasTableModel itm = new RelatorioRespostasTableModel(resp);
            PesquisaGenerica.exibeTela(itm, "Relatório");
        } else {
            JOptionPane.showMessageDialog(this, "Marque a opção PDF ou Tabela!");
        }
    }

    private void btAdministracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdministracaoActionPerformed
        List<Respostas> resp = desempatarGeralAdmAdsContabeis("Administração");
        pdfOuTabela(resp);
    }//GEN-LAST:event_btAdministracaoActionPerformed

    private void btContabeisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btContabeisActionPerformed
        List<Respostas> resp = desempatarGeralAdmAdsContabeis("Ciências Contábeis");
        pdfOuTabela(resp);
    }//GEN-LAST:event_btContabeisActionPerformed

    private void btAnaliseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnaliseActionPerformed
        List<Respostas> resp = desempatarGeralAdmAdsContabeis("Análise e Desenvolvimento de Sistemas");
        pdfOuTabela(resp);
    }//GEN-LAST:event_btAnaliseActionPerformed

    private void btServicoSocialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btServicoSocialActionPerformed
        List<Respostas> resp = desempatarGeralPscicoSocial("Serviço Social");
        pdfOuTabela(resp);
    }//GEN-LAST:event_btServicoSocialActionPerformed

    private void btDireitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDireitoActionPerformed
        List<Respostas> resp = desempatarHistoria("Direito");
        pdfOuTabela(resp);
    }//GEN-LAST:event_btDireitoActionPerformed

    private void btEducacaoFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEducacaoFisicaActionPerformed
        List<Respostas> resp = desempatarGeralEdFisicaEnferFisio("Educação Física");
        pdfOuTabela(resp);
    }//GEN-LAST:event_btEducacaoFisicaActionPerformed

    private void btEnfermagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEnfermagemActionPerformed
        List<Respostas> resp = desempatarGeralEdFisicaEnferFisio("Enfermagem");
        pdfOuTabela(resp);
    }//GEN-LAST:event_btEnfermagemActionPerformed

    private void btFisioterapiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFisioterapiaActionPerformed
        List<Respostas> resp = desempatarGeralEdFisicaEnferFisio("Fisioterapia");
        pdfOuTabela(resp);
    }//GEN-LAST:event_btFisioterapiaActionPerformed

    private void btPsicologiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPsicologiaActionPerformed
        List<Respostas> resp = desempatarGeralPscicoSocial("Psicologia");
        pdfOuTabela(resp);
    }//GEN-LAST:event_btPsicologiaActionPerformed

    private void btPdfGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPdfGeralActionPerformed
        List<Respostas> respAdm = desempatarGeralAdmAdsContabeis("Administração");
        List<Respostas> respCont = desempatarGeralAdmAdsContabeis("Ciências Contábeis");
        List<Respostas> respAds = desempatarGeralAdmAdsContabeis("Análise e Desenvolvimento de Sistemas");
        List<Respostas> respServico = desempatarGeralPscicoSocial("Serviço Social");
        List<Respostas> respDireito = desempatarHistoria("Direito");
        List<Respostas> respEdFisica = desempatarGeralEdFisicaEnferFisio("Educação Física");
        List<Respostas> respEnfermagem = desempatarGeralEdFisicaEnferFisio("Enfermagem");
        List<Respostas> respFisio = desempatarGeralEdFisicaEnferFisio("Fisioterapia");
        List<Respostas> respPsico = desempatarGeralPscicoSocial("Psicologia");
        respostas = respostasDAO.listar().get(0);
        Relatorios.gerarRelatorioGeral(respAdm, respCont, respAds, respServico, respDireito, respEdFisica, respEnfermagem, respFisio, respPsico, respostas);
    }//GEN-LAST:event_btPdfGeralActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelatorioGeral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelatorioGeral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelatorioGeral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelatorioGeral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RelatorioGeral dialog = new RelatorioGeral(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdministracao;
    private javax.swing.JButton btAnalise;
    private javax.swing.JButton btContabeis;
    private javax.swing.JButton btDireito;
    private javax.swing.JButton btEducacaoFisica;
    private javax.swing.JButton btEnfermagem;
    private javax.swing.JButton btFisioterapia;
    private javax.swing.JButton btPdfGeral;
    private javax.swing.JButton btPsicologia;
    private javax.swing.JButton btServicoSocial;
    private javax.swing.JButton btVoltar;
    private javax.swing.ButtonGroup grupoTipoSaida;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JRadioButton jrPdf;
    private javax.swing.JRadioButton jrTabela;
    // End of variables declaration//GEN-END:variables

}
